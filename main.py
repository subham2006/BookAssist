# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ne8kSkHU3RP4ivwmYLaO5zYKQe4zHzlm
"""

!pip install sumy
!pip install pyrebase
!pip install easyocr

import os
import easyocr
reader = easyocr.Reader(['en'])
import pyrebase
import nltk
import smtplib
nltk.download('punkt')
import time

#imports for text-subject classification
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.linear_model import LogisticRegression
import csv

#getting image from firebase
config = {

  "apiKey": "",
  "authDomain": "",
  "databaseURL": "",
  "storageBucket": ""
}

firebase = pyrebase.initialize_app(config)
storage = firebase.storage()
database = firebase.database()

storage.child('/uploaded.png').download('imageFromFirebase.png')

def sendEmail(subject, message):
  tEmail = database.child('teacher').child("email").get().val()

  server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
  password= ""
  server.login('textbookassist@gmail.com', password)

  server.sendmail('textbookassist@gmail.com', 'sclarkson678@gmail.com', 'Subject: {}\n\n{}'.format(subject, message))
  server.quit()

  print('Message Sent Successfully')

def convertImgToTxt(imgName):
  arrayOfText = reader.readtext(imgName, detail = 0)
  myString = ''

  for i in arrayOfText:
    myString+= (i + " ")
  
  return myString

def summarize(startText):
  output = !sumy luhn --length=50% --language=english --file=input.txt
  formattedOutput = ''
  for i in output:
    formattedOutput += (i + " ")

  return formattedOutput

def checkSubject(inputText):
  texts = []
  subjects = []

  with open('sampledata.csv', newline='') as csvfile:
    reader = csv.reader(csvfile, delimiter = ',', quotechar = '|')
    for row in reader:
      if (len(row) > 1):
        texts.append(row[1])
        subjects.append(row[0])

  texts_train, texts_test, subjects_train, subjects_test = train_test_split(texts, subjects, test_size = 0.25, random_state = 1000)

  vectorizer = CountVectorizer()
  vectorizer.fit(texts_train)

  x_train = vectorizer.transform(texts_train)
  x_test = vectorizer.transform(texts_test)

  classifier = LogisticRegression()
  classifier.fit(x_train, subjects_train)

  if(len(inputText) < 30):
    return "Message too short to identify subject"
  final_test = [inputText]
  final_test_vectorized = vectorizer.transform(final_test)
  return str(classifier.predict(final_test_vectorized)[0])

finalString = convertImgToTxt('imageFromFirebase.png')

database.child('whatWeRead').set(finalString)

myFile = open('input.txt', 'w')
myFile.write(finalString)
myFile.close()

words = finalString.split()

if (len(words) > 75):
  finalString = summarize('imageFromFirebase.png')

database.child('subject').set(checkSubject(finalString))

database.child('shortenedText').set(finalString)
sendEmail('Message from one of your students about ' + database.child('subject').get().val(), 'Your student requested that you take a look at this part in your class textbook:'+ '\n\n' + finalString)

database.child('arduinoVal').set(1)
time.sleep(database.child('arduinoTimeDelay').get().val())
database.child('arduinoVal').set(0)
